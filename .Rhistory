between(edad, 71,80) ~ 'Edad entre 71 y 80 años',
between(edad, 81,90) ~ 'Edad entre 81 y 90 años',
edad >= 90 ~ 'Edad mayor a 90 años'
)) %>%
mutate(rango_edad = as_factor(rango_edad))
#Para eliminar datos
datos1 <- datos1 %>%
select(!edad)
##
datos1$tipo_sexo <- as.factor(datos1$tipo_sexo)
datos1$tipo_naci <- as.factor(datos1$tipo_naci)
datos1$tipo_mov <- as.factor(datos1$tipo_mov)
datos1$tipo_mediotransporte <- as.factor(datos1$tipo_mediotransporte)
datos1$rango_edad <- as.factor(datos1$rango_edad)
datos1$motivo <- as.factor(datos1$motivo)
levels(datos1$tipo_mediotransporte) <- c('Via Aerea', 'Via Fluvial', 'Via Martima', 'Via Terrestre')
#library("FactoMineR")
#MCA <- MCA(datos1)
#MCA
#install.packages("ca")
library("ca")
acm <- mjca(datos1)
acm_s_col <- summary(acm)$columns
coord <- data.frame(acm_s_col[,5], acm_s_col[,8])
variables <- data.frame(acm_s_col$name)
variables$GRUPO[str_sub(variables$acm_s_col.name,1,10) == 'tipo_sexo:'] <- 'Sexo'
variables$GRUPO[str_sub(variables$acm_s_col.name,1,10) == 'tipo_naci:'] <- 'Nacionalidad'
variables$GRUPO[str_sub(variables$acm_s_col.name,1,9) == 'tipo_mov:'] <- 'Movimiento'
variables$GRUPO[str_sub(variables$acm_s_col.name,1,21) == 'tipo_mediotransporte:'] <- 'Medio Transporte'
variables$GRUPO[str_sub(variables$acm_s_col.name,1,11) == 'rango_edad:'] <- 'Rango de Edad'
variables$GRUPO[str_sub(variables$acm_s_col.name,1,7) == 'motivo:'] <- 'Motivo de Viaje'
unlist_categorias <- unlist(str_split(variables$acm_s_col.name,":"))
n <- 1:(length(unlist_categorias)/2)
categorias <- unlist_categorias[2*n]
df_coordenadas <- data.frame(coord, categorias, variables$GRUPO )
#View(df_coordenadas)
library(highcharter)
highchart_plot <- highchart() %>%
hc_title(text = 'Análisis de Correspondencia Múltiple') %>%
hc_add_series(df_coordenadas, type = 'scatter', hcaes(x = acm_s_col...5., y = acm_s_col...8., name = categorias, group = variables$GRUPO),
dataLabels = list(format = "{point.name}", enabled = TRUE),
tooltip = list(pointFormat = "{point.name}")) %>%
hc_xAxis(title = list(text = 'd1'), plotLines = list(list(value=0,color='lightblue',width=2,zIndex=4))) %>%
hc_yAxis(title = list(text = 'd2'), plotLines = list(list(value=0,color='lightblue',width=2,zIndex=4)))
highchart_plot
library(factoextra)
eig.val <- get_eigenvalue(acm)
## Scree plot
fviz_screeplot(acm, addlabels = TRUE)
runApp('shiny')
runApp('shiny')
View(acm_s_col)
# Base De Datos en R
#Leyendo las librerias
library(shiny)
library(shinythemes)
#install.packages("tidyverse")
library(tidyverse)
library(readr)
library(corrplot)
library(flexdashboard)
library(DBI)
library(odbc)
library(FactoMineR)
library(factoextra)
library(highcharter)
library("corrplot")
library(ggplot2)
#install.packages("plotly")
library(plotly)
#install.packages("gganimate")
library(gganimate)
library(readxl)
#install.packages("ca")
library("ca")
#install.packages("openxlsx")
library(openxlsx)
library(readxl)
#install.packages("dplyr")
library(dplyr)
#install.packages("plotly")
library(plotly)
library("ca")
#install.packages("highcharter")
library(highcharter)
#Directorio de Trabajo
#setwd("~/ESPOL/4TO/Ingeniería de Datos/Proyecto/Proyecto en R")
datos <- read_excel("C:/Users/USUARIO/Pictures/Proyecto de Ingeniería de Datos/Infosexo_concantidad.xls")
setwd("~/ESPOL/4TO/Ingeniería de Datos/Proyecto de Ingeniería de Datos")
#Directorio de Trabajo
#setwd("~/ESPOL/4TO/Ingeniería de Datos/Proyecto/Proyecto en R")
datos <- read_excel("~/ESPOL/4TO/Ingeniería de Datos/Proyecto de Ingeniería de Datos")
#Directorio de Trabajo
#setwd("~/ESPOL/4TO/Ingeniería de Datos/Proyecto/Proyecto en R")
datos <- read_excel("~/ESPOL/4TO/Ingeniería de Datos/Proyecto de Ingeniería de Datos/Infosexo_concantidad.xls")
#Importando libreria Tidyverse
library(tidyverse)
#?boxplot
#Diagrama de Barras
fig <- plot_ly(type = 'box')
fig <- fig %>% add_boxplot(y = datos$Edad_Maxima, jitter = 0.3, pointpos = -1.8, boxpoints = 'all',
marker = list(color = 'rgb(7,40,89)'),
line = list(color = 'rgb(7,40,89)'),
name = "Edad Maxima")
fig <- fig %>% add_boxplot(y = datos$Edad_Minima, name = "Edad Minima", boxpoints = "all",
marker = list(color = 'rgb(9,56,125)'),
line = list(color = 'rgb(9,56,125)'))
fig <- fig %>% add_boxplot(y = datos$Edad_Promedio, name = "Edad Promedio", boxpoints = 'all',
marker = list(color = 'rgb(8,81,156)',
outliercolor = 'rgba(219, 64, 82, 0.6)',
line = list(outliercolor = 'rgba(219, 64, 82, 1.0)',
outlierwidth = 2)),
line = list(color = 'rgb(8,81,156)'))
fig <- fig %>% layout(title = "Diagrama de Cajas de la Edad según su sexo")
fig
datos %>%
hchart("column", hcaes(x=tipo_sexo, y = Edad_Maxima, color = c("green", "orange", "yellow")))
# Edad Promedio
datos %>%
hchart(
"column", hcaes(x=tipo_sexo, y = Edad_Promedio, color = c("orange", "red", "green"))
)
# Edad Mínima
datos %>%
hchart(
"column", hcaes(x=tipo_sexo, y = Edad_Minima, color = c("orange", "brown", "green"))
)
#CUENTA
datos %>%
hchart(
"column", hcaes(x=tipo_sexo, y = Cuenta, color = c("orange", "brown", "green"))
)
#con <- dbConnect(odbc(), "Proyecto", Database = "Proyecto Ingeniería de Datos")
#sql1 = "select * from modelo_final"
datos1 <- read.csv("C:/Users/USUARIO/Pictures/Proyecto de Ingeniería de Datos/Modelo_final.csv")
datos1 <- datos1 %>%
mutate(rango_edad = case_when(edad <= 10 ~ 'Edad entre 0 y 10 años',
between(edad, 11,20) ~ 'Edad entre 11 y 20 años',
between(edad, 21,30) ~ 'Edad entre 21 y 30 años',
between(edad, 31,40) ~ 'Edad entre 31 y 40 años',
between(edad, 41,50) ~ 'Edad entre 41 y 50 años',
between(edad, 51,60) ~ 'Edad entre 51 y 60 años',
between(edad, 61,70) ~ 'Edad entre 61 y 70 años',
between(edad, 71,80) ~ 'Edad entre 71 y 80 años',
between(edad, 81,90) ~ 'Edad entre 81 y 90 años',
edad >= 90 ~ 'Edad mayor a 90 años'
)) %>%
mutate(rango_edad = as_factor(rango_edad))
#Para eliminar datos
datos1 <- datos1 %>%
select(!edad)
##
datos1$tipo_sexo <- as.factor(datos1$tipo_sexo)
datos1$tipo_naci <- as.factor(datos1$tipo_naci)
datos1$tipo_mov <- as.factor(datos1$tipo_mov)
datos1$tipo_mediotransporte <- as.factor(datos1$tipo_mediotransporte)
datos1$rango_edad <- as.factor(datos1$rango_edad)
datos1$motivo <- as.factor(datos1$motivo)
levels(datos1$tipo_mediotransporte) <- c('Via Aerea', 'Via Fluvial', 'Via Martima', 'Via Terrestre')
#library("FactoMineR")
#MCA <- MCA(datos1)
#MCA
#install.packages("ca")
library("ca")
acm <- mjca(datos1)
acm_s_col <- summary(acm)$columns
coord <- data.frame(acm_s_col[,5], acm_s_col[,8])
variables <- data.frame(acm_s_col$name)
variables$GRUPO[str_sub(variables$acm_s_col.name,1,10) == 'tipo_sexo:'] <- 'Sexo'
variables$GRUPO[str_sub(variables$acm_s_col.name,1,10) == 'tipo_naci:'] <- 'Nacionalidad'
variables$GRUPO[str_sub(variables$acm_s_col.name,1,9) == 'tipo_mov:'] <- 'Movimiento'
variables$GRUPO[str_sub(variables$acm_s_col.name,1,21) == 'tipo_mediotransporte:'] <- 'Medio Transporte'
variables$GRUPO[str_sub(variables$acm_s_col.name,1,11) == 'rango_edad:'] <- 'Rango de Edad'
variables$GRUPO[str_sub(variables$acm_s_col.name,1,7) == 'motivo:'] <- 'Motivo de Viaje'
unlist_categorias <- unlist(str_split(variables$acm_s_col.name,":"))
n <- 1:(length(unlist_categorias)/2)
categorias <- unlist_categorias[2*n]
df_coordenadas <- data.frame(coord, categorias, variables$GRUPO )
#View(df_coordenadas)
library(highcharter)
highchart_plot <- highchart() %>%
hc_title(text = 'Análisis de Correspondencia Múltiple') %>%
hc_add_series(df_coordenadas, type = 'scatter', hcaes(x = acm_s_col...5., y = acm_s_col...8., name = categorias, group = variables$GRUPO),
dataLabels = list(format = "{point.name}", enabled = TRUE),
tooltip = list(pointFormat = "{point.name}")) %>%
hc_xAxis(title = list(text = 'd1'), plotLines = list(list(value=0,color='lightblue',width=2,zIndex=4))) %>%
hc_yAxis(title = list(text = 'd2'), plotLines = list(list(value=0,color='lightblue',width=2,zIndex=4)))
highchart_plot
library(factoextra)
eig.val <- get_eigenvalue(acm)
## Scree plot
fviz_screeplot(acm, addlabels = TRUE)
runApp('shiny')
runApp('shiny')
shiny::runApp('shiny')
shiny::runApp('shiny')
# Base De Datos en R
#Leyendo las librerias
library(shiny)
library(shinythemes)
#install.packages("tidyverse")
library(tidyverse)
library(readr)
library(corrplot)
library(flexdashboard)
library(DBI)
library(odbc)
library(FactoMineR)
library(factoextra)
library(highcharter)
library("corrplot")
library(ggplot2)
#install.packages("plotly")
library(plotly)
#install.packages("gganimate")
library(gganimate)
install.packages("gganimate")
#install.packages("gganimate")
library(gganimate)
library(readxl)
#install.packages("ca")
library("ca")
#install.packages("openxlsx")
library(openxlsx)
library(readxl)
#install.packages("dplyr")
library(dplyr)
#install.packages("plotly")
library(plotly)
library("ca")
#install.packages("highcharter")
library(highcharter)
#Directorio de Trabajo
#setwd("~/ESPOL/4TO/Ingeniería de Datos/Proyecto/Proyecto en R")
datos <- read_excel("~/ESPOL/4TO/Ingeniería de Datos/Proyecto de Ingeniería de Datos/Infosexo_concantidad.xls")
#Importando libreria Tidyverse
library(tidyverse)
#?boxplot
#Diagrama de Barras
fig <- plot_ly(type = 'box')
fig <- fig %>% add_boxplot(y = datos$Edad_Maxima, jitter = 0.3, pointpos = -1.8, boxpoints = 'all',
marker = list(color = 'rgb(7,40,89)'),
line = list(color = 'rgb(7,40,89)'),
name = "Edad Maxima")
fig <- fig %>% add_boxplot(y = datos$Edad_Minima, name = "Edad Minima", boxpoints = "all",
marker = list(color = 'rgb(9,56,125)'),
line = list(color = 'rgb(9,56,125)'))
fig <- fig %>% add_boxplot(y = datos$Edad_Promedio, name = "Edad Promedio", boxpoints = 'all',
marker = list(color = 'rgb(8,81,156)',
outliercolor = 'rgba(219, 64, 82, 0.6)',
line = list(outliercolor = 'rgba(219, 64, 82, 1.0)',
outlierwidth = 2)),
line = list(color = 'rgb(8,81,156)'))
fig <- fig %>% layout(title = "Diagrama de Cajas de la Edad según su sexo")
fig
datos %>%
hchart("column", hcaes(x=tipo_sexo, y = Edad_Maxima, color = c("green", "orange", "yellow")))
View(datos)
#con <- dbConnect(odbc(), "Proyecto", Database = "Proyecto Ingeniería de Datos")
#sql1 = "select * from modelo_final"
datos1 <- read.csv("C:/Users/USUARIO/Pictures/Proyecto de Ingeniería de Datos/Modelo_final.csv")
setwd("~/ESPOL/4TO/Ingeniería de Datos/Proyecto de Ingeniería de Datos")
#con <- dbConnect(odbc(), "Proyecto", Database = "Proyecto Ingeniería de Datos")
#sql1 = "select * from modelo_final"
datos1 <- read.csv("~/ESPOL/4TO/Ingeniería de Datos/Proyecto de Ingeniería de Datos/Modelo_final.csv")
#(datos1 <- dbGetQuery(con, sql1))
View(datos1)
runApp('shiny')
datos %>%
hchart("column", hcaes(x=tipo_sexo, y = count(tipo_sexo), color = c("green", "orange", "yellow")))
shiny::runApp('shiny')
# Base De Datos en R
#Leyendo las librerias
library(shiny)
library(shinythemes)
#install.packages("tidyverse")
library(tidyverse)
library(readr)
library(corrplot)
library(flexdashboard)
library(DBI)
library(odbc)
library(FactoMineR)
library(factoextra)
library(highcharter)
library("corrplot")
library(ggplot2)
#install.packages("plotly")
library(plotly)
#install.packages("gganimate")
library(gganimate)
library(readxl)
#install.packages("ca")
library("ca")
#install.packages("openxlsx")
library(openxlsx)
library(readxl)
#install.packages("dplyr")
library(dplyr)
#install.packages("plotly")
library(plotly)
library("ca")
#install.packages("highcharter")
library(highcharter)
#Directorio de Trabajo
#setwd("~/ESPOL/4TO/Ingeniería de Datos/Proyecto/Proyecto en R")
datos <- read_excel("~/ESPOL/4TO/Ingeniería de Datos/Proyecto de Ingeniería de Datos/Infosexo_concantidad.xls")
#Importando libreria Tidyverse
library(tidyverse)
#?boxplot
#Diagrama de Cajas
fig <- plot_ly(type = 'box')
fig <- fig %>% add_boxplot(y = datos$Edad_Maxima, jitter = 0.3, pointpos = -1.8, boxpoints = 'all',
marker = list(color = 'rgb(7,40,89)'),
line = list(color = 'rgb(7,40,89)'),
name = "Edad Maxima")
fig <- fig %>% add_boxplot(y = datos$Edad_Minima, name = "Edad Minima", boxpoints = "all",
marker = list(color = 'rgb(9,56,125)'),
line = list(color = 'rgb(9,56,125)'))
fig <- fig %>% add_boxplot(y = datos$Edad_Promedio, name = "Edad Promedio", boxpoints = 'all',
marker = list(color = 'rgb(8,81,156)',
outliercolor = 'rgba(219, 64, 82, 0.6)',
line = list(outliercolor = 'rgba(219, 64, 82, 1.0)',
outlierwidth = 2)),
line = list(color = 'rgb(8,81,156)'))
fig <- fig %>% layout(title = "Diagrama de Cajas de la Edad según su sexo")
fig
datos %>%
hchart("column", hcaes(x=tipo_sexo, y = Edad_Maxima, color = c("green", "orange", "yellow")))
# Edad Promedio
datos %>%
hchart(
"column", hcaes(x=tipo_sexo, y = Edad_Promedio, color = c("orange", "red", "green"))
)
# Edad Mínima
datos %>%
hchart(
"column", hcaes(x=tipo_sexo, y = Edad_Minima, color = c("orange", "brown", "green"))
)
#CUENTA
datos %>%
hchart(
"column", hcaes(x=tipo_sexo, y = Cuenta, color = c("orange", "brown", "green"))
)
#con <- dbConnect(odbc(), "Proyecto", Database = "Proyecto Ingeniería de Datos")
#sql1 = "select * from modelo_final"
datos1 <- read.csv("C:/Users/USUARIO/Pictures/Proyecto de Ingeniería de Datos/Modelo_final.csv")
datos1 <- datos1 %>%
mutate(rango_edad = case_when(edad <= 10 ~ 'Edad entre 0 y 10 años',
between(edad, 11,20) ~ 'Edad entre 11 y 20 años',
between(edad, 21,30) ~ 'Edad entre 21 y 30 años',
between(edad, 31,40) ~ 'Edad entre 31 y 40 años',
between(edad, 41,50) ~ 'Edad entre 41 y 50 años',
between(edad, 51,60) ~ 'Edad entre 51 y 60 años',
between(edad, 61,70) ~ 'Edad entre 61 y 70 años',
between(edad, 71,80) ~ 'Edad entre 71 y 80 años',
between(edad, 81,90) ~ 'Edad entre 81 y 90 años',
edad >= 90 ~ 'Edad mayor a 90 años'
)) %>%
mutate(rango_edad = as_factor(rango_edad))
#con <- dbConnect(odbc(), "Proyecto", Database = "Proyecto Ingeniería de Datos")
#sql1 = "select * from modelo_final"
datos1 <- read.csv("Modelo_final.csv")
datos1 <- datos1 %>%
mutate(rango_edad = case_when(edad <= 10 ~ 'Edad entre 0 y 10 años',
between(edad, 11,20) ~ 'Edad entre 11 y 20 años',
between(edad, 21,30) ~ 'Edad entre 21 y 30 años',
between(edad, 31,40) ~ 'Edad entre 31 y 40 años',
between(edad, 41,50) ~ 'Edad entre 41 y 50 años',
between(edad, 51,60) ~ 'Edad entre 51 y 60 años',
between(edad, 61,70) ~ 'Edad entre 61 y 70 años',
between(edad, 71,80) ~ 'Edad entre 71 y 80 años',
between(edad, 81,90) ~ 'Edad entre 81 y 90 años',
edad >= 90 ~ 'Edad mayor a 90 años'
)) %>%
mutate(rango_edad = as_factor(rango_edad))
#Para eliminar datos
datos1 <- datos1 %>%
select(!edad)
##
datos1$tipo_sexo <- as.factor(datos1$tipo_sexo)
datos1$tipo_naci <- as.factor(datos1$tipo_naci)
datos1$tipo_mov <- as.factor(datos1$tipo_mov)
datos1$tipo_mediotransporte <- as.factor(datos1$tipo_mediotransporte)
datos1$rango_edad <- as.factor(datos1$rango_edad)
datos1$motivo <- as.factor(datos1$motivo)
levels(datos1$tipo_mediotransporte) <- c('Via Aerea', 'Via Fluvial', 'Via Martima', 'Via Terrestre')
#library("FactoMineR")
#MCA <- MCA(datos1)
#MCA
#install.packages("ca")
library("ca")
acm <- mjca(datos1)
acm_s_col <- summary(acm)$columns
(acm_s_col <- summary(acm)$columns)
# Base De Datos en R
#Leyendo las librerias
library(shiny)
library(shinythemes)
#install.packages("tidyverse")
library(tidyverse)
library(readr)
library(corrplot)
library(flexdashboard)
library(DBI)
library(odbc)
library(FactoMineR)
library(factoextra)
library(highcharter)
library("corrplot")
library(ggplot2)
#install.packages("plotly")
library(plotly)
#install.packages("gganimate")
library(gganimate)
library(readxl)
#install.packages("ca")
library("ca")
#install.packages("openxlsx")
library(openxlsx)
library(readxl)
#install.packages("dplyr")
library(dplyr)
#install.packages("plotly")
library(plotly)
library("ca")
#install.packages("highcharter")
library(highcharter)
#Directorio de Trabajo
#setwd("~/ESPOL/4TO/Ingeniería de Datos/Proyecto/Proyecto en R")
datos <- read_excel("~/ESPOL/4TO/Ingeniería de Datos/Proyecto de Ingeniería de Datos/Infosexo_concantidad.xls")
#Importando libreria Tidyverse
library(tidyverse)
#?boxplot
#Diagrama de Cajas
fig <- plot_ly(type = 'box')
fig <- fig %>% add_boxplot(y = datos$Edad_Maxima, jitter = 0.3, pointpos = -1.8, boxpoints = 'all',
marker = list(color = 'rgb(7,40,89)'),
line = list(color = 'rgb(7,40,89)'),
name = "Edad Maxima")
fig <- fig %>% add_boxplot(y = datos$Edad_Minima, name = "Edad Minima", boxpoints = "all",
marker = list(color = 'rgb(9,56,125)'),
line = list(color = 'rgb(9,56,125)'))
fig <- fig %>% add_boxplot(y = datos$Edad_Promedio, name = "Edad Promedio", boxpoints = 'all',
marker = list(color = 'rgb(8,81,156)',
outliercolor = 'rgba(219, 64, 82, 0.6)',
line = list(outliercolor = 'rgba(219, 64, 82, 1.0)',
outlierwidth = 2)),
line = list(color = 'rgb(8,81,156)'))
fig <- fig %>% layout(title = "Diagrama de Cajas de la Edad según su sexo")
fig
datos %>%
hchart("column", hcaes(x=tipo_sexo, y = Edad_Maxima, color = c("green", "orange", "yellow")))
# Edad Promedio
datos %>%
hchart(
"column", hcaes(x=tipo_sexo, y = Edad_Promedio, color = c("orange", "red", "green"))
)
# Edad Mínima
datos %>%
hchart(
"column", hcaes(x=tipo_sexo, y = Edad_Minima, color = c("orange", "brown", "green"))
)
#CUENTA
datos %>%
hchart(
"column", hcaes(x=tipo_sexo, y = Cuenta, color = c("orange", "brown", "green"))
)
#con <- dbConnect(odbc(), "Proyecto", Database = "Proyecto Ingeniería de Datos")
#sql1 = "select * from modelo_final"
datos1 <- read.csv("C:/Users/USUARIO/Pictures/Proyecto de Ingeniería de Datos/Modelo_final.csv")
datos1 <- datos1 %>%
mutate(rango_edad = case_when(edad <= 10 ~ 'Edad entre 0 y 10 años',
between(edad, 11,20) ~ 'Edad entre 11 y 20 años',
between(edad, 21,30) ~ 'Edad entre 21 y 30 años',
between(edad, 31,40) ~ 'Edad entre 31 y 40 años',
between(edad, 41,50) ~ 'Edad entre 41 y 50 años',
between(edad, 51,60) ~ 'Edad entre 51 y 60 años',
between(edad, 61,70) ~ 'Edad entre 61 y 70 años',
between(edad, 71,80) ~ 'Edad entre 71 y 80 años',
between(edad, 81,90) ~ 'Edad entre 81 y 90 años',
edad >= 90 ~ 'Edad mayor a 90 años'
)) %>%
mutate(rango_edad = as_factor(rango_edad))
##
datos1$tipo_sexo <- as.factor(datos1$tipo_sexo)
datos1$tipo_naci <- as.factor(datos1$tipo_naci)
datos1$tipo_mov <- as.factor(datos1$tipo_mov)
datos1$tipo_mediotransporte <- as.factor(datos1$tipo_mediotransporte)
datos1$rango_edad <- as.factor(datos1$rango_edad)
datos1$motivo <- as.factor(datos1$motivo)
levels(datos1$tipo_mediotransporte) <- c('Via Aerea', 'Via Fluvial', 'Via Martima', 'Via Terrestre')
#library("FactoMineR")
#MCA <- MCA(datos1)
#MCA
#install.packages("ca")
library("ca")
acm <- mjca(datos1)
acm_s_col <- summary(acm)$columns
coord <- data.frame(acm_s_col[,5], acm_s_col[,8])
variables <- data.frame(acm_s_col$name)
(variables <- data.frame(acm_s_col$name))
(acm_s_col <- summary(acm)$columns)
shiny::runApp('shiny')
shiny::runApp('shiny')
setwd("~/ESPOL/4TO/Ingeniería de Datos/Proyecto de Ingeniería de Datos  Mejorado")
shiny::runApp('shiny')
runApp('shinymejorado')
runApp('shinymejorado')
runApp('shinymejorado')
shiny::runApp('shinymejorado')
shiny::runApp()
